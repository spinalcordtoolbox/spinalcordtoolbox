name: Test batch_processing.sh

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - '*'
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
    # > Scheduled workflows run on the latest commit on the default or base branch
    # i.e. this can only run on master
    - cron:  '0 11 * * *'

env:
  # Turns on color output for pytest. See: https://github.com/pytest-dev/pytest/issues/7443#issuecomment-656642591
  PY_COLORS: "1"
  # Used in 'pytest.mark.skipif()' for test, which prevents the test from being run during the usual test suite
  TEST_BATCH_PROCESSING: "1"
  # Disable progress bars for less verbose output
  PIP_PROGRESS_BAR: "off"
  SCT_PROGRESS_BAR: "off"

jobs:
  batch_processing:
    name: Test batch_processing.sh
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15, windows-2019 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      - name: Checkout SCT
        uses: actions/checkout@v2
        with:
          path: checkout/spinalcordtoolbox

      # install_sct edits ~/.bashrc, but those environment changes don't get passed to subsequent steps in GH Actions.
      # So, we filter through the .bashrc and pass the values to $GITHUB_ENV and $GITHUB_PATH.
      # Relevant documentation: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files
      # This workaround should be replaced by https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3198#discussion_r568225392
      - name: Install SCT (Unix)
        if: matrix.os != 'windows-2019'
        run: |
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/checkout/spinalcordtoolbox" >> $GITHUB_ENV
          cd checkout/spinalcordtoolbox
          ./install_sct -y
          cat ~/.bashrc | grep "export SCT_DIR" | cut -d " " -f 2 >> $GITHUB_ENV
          cat ~/.bashrc | grep "export PATH" | grep -o "/.*" | cut -d ':' -f 1 >> $GITHUB_PATH

      # Notes about Windows environment variable setting:
      #  - The installation directory for Windows is NOT the checkout directory (unlike UNIX platforms)
      #  - The PATH-setting step would typically be done manually by the user in a Windows GUI after installation,
      #    but here, we do it before installation, because `install_sct.bat` has a "Press any key to continue..." pause.
      #  - install_sct.bat uses %HOMEPATH% internally; it will typically be set on user accounts, but isn't set for GHA.
      - name: Install SCT (Windows)
        if: matrix.os == 'windows-2019'
        shell: cmd
        run: |
          echo INSTALL_DIR=%GITHUB_WORKSPACE%/spinalcordtoolbox >> %GITHUB_ENV%
          echo %GITHUB_WORKSPACE%/spinalcordtoolbox/bin >> %GITHUB_PATH%
          set HOMEPATH=%GITHUB_WORKSPACE%
          copy checkout\spinalcordtoolbox\install_sct.bat .\
          install_sct.bat %BRANCH_NAME%

      - name: Check dependencies
        run: sct_check_dependencies

      - name: Run batch_processing.sh
        run: |
          cd $INSTALL_DIR
          ./batch_processing.sh

      - name: Validate new results
        run: |
          cd $INSTALL_DIR
          # Auto-pass macOS as it would fail due to https://github.com/spinalcordtoolbox/spinalcordtoolbox/issues/3194
          if [ "$RUNNER_OS" == "macOS" ]; then
               sct_testing testing/batch_processing/test_batch_processing.py || exit 0
          else
               sct_testing testing/batch_processing/test_batch_processing.py
          fi
