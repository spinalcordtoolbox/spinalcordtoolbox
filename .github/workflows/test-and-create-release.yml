name: "Test and create release"

on:
  workflow_dispatch:
    inputs:
      milestone_title:
        description: 'Milestone title'
        required: true
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  schedule:
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#onschedule
    # > Scheduled workflows run on the latest commit on the default or base branch
    # i.e. this can only run on master
    - cron: '0 11 * * *'

env:
  MAIN_BRANCH: "master"
  RELEASE_BRANCH: "release"
  # Turns on color output for pytest. See: https://github.com/pytest-dev/pytest/issues/7443#issuecomment-656642591
  PY_COLORS: "1"
  # Disable progress bars for less verbose output
  PIP_PROGRESS_BAR: "off"
  SCT_PROGRESS_BAR: "off"


jobs:
  generate-requirements-freeze:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout spinalcordtoolbox (main branch)
      uses: actions/checkout@v2
      with:
        ref: ${{ env.MAIN_BRANCH }}
        fetch-depth: 0

    - name: Install spinalcordtoolbox
      run: |
        ./install_sct -iy

    - name: Update requirements-freeze.txt
      run: |
        source python/etc/profile.d/conda.sh
        conda activate venv_sct
        pip freeze | grep -v "-e git+" | grep -v "torch" > requirements-freeze.txt
        conda deactivate
        echo "# Platform-specific torch requirements (See SCT Issue #2745)" >> requirements-freeze.txt
        grep "torch" requirements.txt >> requirements-freeze.txt

    - name: Upload requirements-freeze.txt
      uses: actions/upload-artifact@v3
      with:
        path: requirements-freeze.txt

  test-release:
    needs: generate-requirements-freeze
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
    runs-on: ${{ matrix.os }}
    # NB: Setting `bash` as the default shell is a bit of a hack workaround for Windows to allow it to run .sh scripts.
    #     Normally, we would ask the user to install a Windows-compatible bash via either Cygwin or Git for Windows.
    #     But, setting `bash` here is the quickest/easiest way to get a cross-OS compatible GHA workflow.
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout spinalcordtoolbox (main branch)
      uses: actions/checkout@v2
      with:
        path: checkout/spinalcordtoolbox
        ref: ${{ env.MAIN_BRANCH }}
        fetch-depth: 0

    - name: Merge main branch into release branch
      working-directory: checkout/spinalcordtoolbox
      run: |
        git checkout ${{ env.RELEASE_BRANCH }}
        git merge --no-ff ${{ env.MAIN_BRANCH }}

    - name: Download requirements-freeze.txt
      uses: actions/download-artifact@v3
      with:
        name: requirements-freeze
        path: checkout/spinalcordtoolbox

    - name: Update version.txt (using test value for CI)
      working-directory: checkout/spinalcordtoolbox
      run: |
        echo "0.0" > spinalcordtoolbox/version.txt

    - name: Install SCT from release branch (Unix)
      working-directory: checkout/spinalcordtoolbox
      run: |
        ./install_sct -yc

    - name: Install SCT from release branch (Windows)
      shell: cmd
      run: |
        set HOMEPATH=%GITHUB_WORKSPACE%
        copy checkout\spinalcordtoolbox\install_sct.bat .\
        install_sct.bat %BRANCH_NAME%

    - name: Update environment variables
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then

          # NB: `INSTALL_DIR` is only used for GitHub Actions, and wouldn't be set in a normal install.
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/spinalcordtoolbox" >> $GITHUB_ENV

          # NB: I'm not sure what GHA's syntax is for cmd.exe, so we use bash just for this one change
          # In a user install, the user would perform this step using the Windows PATH-changing GUI.
          echo "$GITHUB_WORKSPACE/spinalcordtoolbox/bin" >> $GITHUB_PATH

        else

          # NB: `INSTALL_DIR` is only used for GitHub Actions, and wouldn't be set in a normal install.
          echo "INSTALL_DIR=$GITHUB_WORKSPACE/checkout/spinalcordtoolbox" >> $GITHUB_ENV

          # NB: install_sct edits ~/.bashrc, but those environment changes don't get passed to subsequent steps in GH Actions.
          # So, we filter through the .bashrc and pass the values to $GITHUB_ENV and $GITHUB_PATH.
          # Relevant documentation: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files
          # This workaround should be replaced by https://github.com/spinalcordtoolbox/spinalcordtoolbox/pull/3198#discussion_r568225392
          cat ~/.bashrc | grep "export SCT_DIR" | cut -d " " -f 2 >> $GITHUB_ENV
          cat ~/.bashrc | grep "export PATH" | grep -o "/.*" | cut -d ':' -f 1 >> $GITHUB_PATH

        fi

    - name: Run sct_check_dependencies
      run: |
        sct_check_dependencies

    - name: Run sct_testing
      run: |
        sct_testing

  create-release:
    needs: test-release
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:

    - name: Checkout spinalcordtoolbox (main branch)
      uses: actions/checkout@v2
      with:
        path: checkout/spinalcordtoolbox
        ref: ${{ env.MAIN_BRANCH }}
        fetch-depth: 0

    - name: Merge main branch into release branch
      run: |
        git checkout ${{ env.RELEASE_BRANCH }}
        git merge --no-ff ${{ env.MAIN_BRANCH }}

    - name: Download requirements-freeze.txt
      uses: actions/download-artifact@v3
      with:
        name: requirements-freeze

    - name: Update version.txt (using milestone title)
      run: |
        echo "${{ github.event.inputs.milestone_title }}" > spinalcordtoolbox/version.txt

    # The GitHub Actions bot email was taken from: https://github.community/t/github-actions-bot-email-address/17204/6
    - name: Set bot user data for commits
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions Bot"

    - name: Commit and push
      run: |
        git add requirements-freeze.txt
        git commit -m "Update requirements-freeze.txt for ${{ github.event.inputs.milestone_title }}"
        git add spinalcordtoolbox/version.txt
        git commit -m "Update version.txt for ${{ github.event.inputs.milestone_title }}"
        git push

    - uses: ncipollo/release-action@v1
      name: Create release
      with:
        commit: ${{ env.RELEASE_BRANCH }}
        tag: ${{ github.event.inputs.milestone_title }}
        token: ${{ secrets.GITHUB_TOKEN }}
        bodyFile: ".github/workflows/release-body.md"