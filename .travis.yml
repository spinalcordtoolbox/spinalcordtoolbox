# testing file for Travis
# https://travis-ci.org/neuropoly/spinalcordtoolbox

sudo: false  # To use travis container infrastructure

language: python

notifications:
  slack: neuropoly:YA3mt28aeHN3A0Iu7RvMFigK
    on_success:change
    on_failure:always

# this enables to avoid recompilation of dipy if it was already compiled previously
cache:
  directories:
    - ${HOME}/.cache/pip

matrix:
  include:
#    - os: linux
#      python: 2.7 # Just to make travis's UI a bit prettier
#      env: SCT_MINICONDA=2 SCT_VERBOSE_INSTALL=1
    - os: linux
      dist: xenial
      python: 2.7
    - os: linux
      python: 2.7
      env: SCT_MINICONDA=2
#    - os: linux
#      python: 2.7
#      env: SCT_MINICONDA=3
    - os: osx
      language: generic
      env: SCT_MINICONDA=2
#    - os: osx
#      language: generic
#      env: SCT_MINICONDA=2 SCT_VERBOSE_INSTALL=1
#    - os: osx
#      language: generic
#      env: SCT_MINICONDA=3
  allow_failures:
    - os: linux
      python: 2.7
      env: SCT_MINICONDA=3
    - os: osx
      language: generic
      env: SCT_MINICONDA=3

before_install:
  - echo "HOME="
  - echo $HOME
  - sudo apt-get update -qq; sudo apt-get install -qq libopenmpi-dev; echo


install:
# update tools
#  - ./update_bin.sh
  - |
    echo Installing SCT
    if [ "x${SCT_MINICONDA}" == "x" ]; then
     pip install --upgrade pip
     #pip install numpy
     pip install -e .
     mkdir data
     cd data
     for data in PAM50 gm_model optic_models pmj_models deepseg_sc_models deepseg_gm_models deepseg_lesion_models; do
      sct_download_data -d ${data}
     done
     cd -
    else
     yes | ASK_REPORT_QUESTION=false ./install_sct
     PATH="$PATH:$PWD/bin"
    fi

script:
# test dependencies
#  - sct_check_dependencies
# test functions & integrity
#  - bash -c "sudo apt-get install -qq libalglib-dev libinsighttoolkit4-dev; apt-cache show libvtk6-dev && sudo apt-get install -qq libvtk6-dev; apt-cache show libvtk7-dev && sudo apt-get install -qq libvtk7-dev; cd $HOME/build/neuropoly/spinalcordtoolbox/dev/isct_propseg; mkdir -p build; cd build; cmake ..; make; echo"

  - |
    echo Checking
    echo $PATH
    if [ "x${SCT_MINICONDA}" == "x" ]; then
      :
    else
      ls -lA bin
    fi
    sct_download_data -d sct_testing_data # for tests

  - |
    echo Linting
    pip install pylint
    bash -c 'PYTHONPATH="$PWD/scripts:$PWD" pylint -j3 --py3k --output-format=parseable --errors-only $(git ls-tree --name-only -r HEAD | sort | grep -E "(spinalcordtoolbox|scripts|testing).*\.py" | xargs); exit $(((($?&3))!=0))'

  - |
    echo Configuring coverage
    pip install coverage
    echo -ne "import coverage\ncov = coverage.process_startup()\n" > sitecustomize.py
    echo -ne "[run]\nconcurrency = multiprocessing\nparallel = True\n" > .coveragerc

  - |
    echo Installing and running pytest
    PATH_="$PATH"
    PATH="$PWD/python/bin:$PATH"
    pip install pytest pytest.cov
    PYTHONPATH=scripts pytest -v --cov-append --cov=spinalcordtoolbox --cov=scripts unit_testing/*.py
    PATH="${PATH_}"

  - |
    echo Running integration tests
    if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      COVERAGE_PROCESS_START="$PWD/.coveragerc" COVERAGE_FILE="$PWD/.coverage" sct_testing -j1 -d 0 --abort-on-failure
      #brew update;
      #brew install gdb;
      #COVERAGE_PROCESS_START="$PWD/.coveragerc" COVERAGE_FILE="$PWD/.coverage" gdb --batch --ex "b __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__"  -ex r --ex "threads apply all bt" -ex "quit" --args python/bin/python  $(which sct_testing) -d 1 --abort-on-failure
      #COVERAGE_PROCESS_START="$PWD/.coveragerc" COVERAGE_FILE="$PWD/.coverage" \
      # lldb --batch \
      #  -o "breakpoint set --name __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY___YOU_MUST_EXEC__" \
      #  -o "process launch -- scripts/sct_testing.py -j1 -d 1 --abort-on-failure" \
      #  -o "thread backtrace all" \
      #  -o "quit" \
      #  python/bin/python
      coverage combine
    else
      COVERAGE_PROCESS_START="$PWD/.coveragerc" COVERAGE_FILE="$PWD/.coverage" sct_testing -d 0 --abort-on-failure
      coverage combine
    fi

  - |
    echo Building docs
    pip install sphinx sphinxcontrib.programoutput sphinx_rtd_theme
    cd documentation/sphinx
    make html
    cd -


  - pip install coveralls

#  - python create_package.py -s ${TRAVIS_OS_NAME}  # test package creation
#  - cd ../spinalcordtoolbox_v*
#  - yes | ./install_sct  # test installation of package
  - echo "This is the end, thanks for reading up to here."

after_success:
  - CI=true TRAVIS=true coveralls
