#!/usr/bin/env bash
# USAGE
# > ./install_sct
#
# This is the spinalcord toolbox (SCT) installer
# It downloads the Conda (http://conda.pydata.org/) version
# of python and install the SCT requirements over it
#
# The SCT can be install in place where you download it. But then do
# not delete the source code or you will delete the installation too!
#
# If you run the installer as super user, the default install is /opt,
# if you choose this option or any other directory other than the
# source location, you can get rid of the source code after the
# installation is successful.
#
#########################################################################################
# Copyright (c) 2016 Polytechnique Montreal <www.neuro.polymtl.ca>
# Author: PO Quirion
# License: see the file LICENSE.TXT
#########################################################################################


# TODO add some doc to the installer

SCT_FOLDER_NAME="spinalcordtoolbox"

echo "Welcome to the SCT installer!"

# functions
START_DIR=$PWD
finish (){
#  Clean at exit
  cd ${START_DIR}
}
trap finish EXIT

force_bashrc_loading (){

  sourceblock="
if [ -n \"\$BASH_VERSION\" ]; then
    # include .bashrc if it exists
    if [ -f \"\$HOME/.bashrc\" ]; then
    . \"\$HOME/.bashrc\"
    fi
fi"

  for profiles in  ~/.bash_profile ~/.bash_login ~/.profile ; do
    if [[ -a $profiles ]] ; then
       if ! grep -E "(\.|source) .*bashrc" ${profiles} > /dev/null ; then
       echo HUP
         echo "${sourceblock}" >> ${profiles}
       fi
       bidon=0
       break
    fi
  done

  if [ -z ${bidon} ] ; then
    echo "${sourceblock}" >> ~/.bash_profile
  fi

}

install_refresh (){
  # Taking care of the old style install_sct
  sed -i'-sct.bak' -e '
  /^# SPINALCORDTOOLBOX/  {
    N
    /SCT_DIR=/ {
      N
      /export PATH.*SCT_DIR\/bin/ {
        N
        /export PYTHONPATH.*SCT_DIR\/script/{
          N
          /export SCT_DIR PATH/{
            N
            /export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=[0-9]*/ {
              s|\(.*\n\)\(S.*\n\)\(.*\n\)\(.*\n\)\(.*\n\)\(.*\)|\1#\2#\3#\4#\5#\6|
              }
            }
          }
        }
      }
    }
  '  ${THE_BASHRC}

  if  grep -qPzo "^# SPINALCORDTOOLBOX.*\nexport .*$SCT_FOLDER_NAME.*" ${THE_BASHRC} > /dev/null ; then
    sed -i'-sct.bak' -e "
    /# SPINALCORDTOOLBOX/ {
      N
      /export PATH=\$PATH:.*$SCT_FOLDER_NAME\/bin/ {
        s|\(# SPINALCORDTOOLBOX\).*\(\nexport PATH=\$PATH:\).*$SCT_FOLDER_NAME/bin|\1 (installed on $(date +%Y-%m-%d\ %H:%M))\2$SCT_DIR/bin|
      }
    }
    "  ${THE_BASHRC}
  else
    echo "# SPINALCORDTOOLBOX (installed on $(date +%Y-%m-%d\ %H:%M:%S))" >> ${THE_BASHRC}
    echo "export PATH=\$PATH:${SCT_DIR}/bin" >> ${THE_BASHRC}
 fi

}

# Script
# Check where the install script is ran from
if [[ $PWD =~ /spinalcordtoolbox$ ]] ;then
  SCT_SOURCE=${PWD}
elif  [[ $PWD =~ /spinalcordtoolbox/install$ ]] ;then
  SCT_SOURCE=${PWD%/install}
elif  [ ls $SCT_FOLDER_NAME ] ;then
  SCT_SOURCE=${PWD}/${SCT_FOLDER_NAME}
else
   echo I can\'t find SCT source folder \"${SCT_FOLDER_NAME}/\"
fi

if [[ $UID == 0 ]]; then
  # sudo mode
  THE_BASHRC=/etc/profile.d/sct.sh
  THE_CSHRC=/etc/profile.d/sct.csh
  INSTALL_DIR=/opt
else
  # user mode
  THE_BASHRC=${HOME}/.bashrc
  THE_CSHRC=${HOME}/.cshrc
  INSTALL_DIR="${HOME}"
fi

# Set install dir
while  true ; do
  echo SCT will be installed here: [${INSTALL_DIR}]
  while  [[ ! ${change_default_path} =~ ^([Yy](es)?|[Nn]o?)$ ]] ; do
    echo -n "Do you agree Yes/No: "
    read change_default_path
  done
  if [[ ${change_default_path} =~ ^[Yy] ]]; then
    break
  fi
  echo -n choose install dir:
  read new_install
  if [ -d "${new_install}" ]; then
    INSTALL_DIR=${new_install}
    break
  elif [ ! "${new_install}" ]; then
    break
  else
    echo invalid directory
    continue
  fi
done

SCT_DIR=${INSTALL_DIR%/}/${SCT_FOLDER_NAME}

# create fetching variables for Python packages
if uname -a | grep -i  darwin > /dev/null 2>&1; then
  # Do something under Mac OS X platformn
  OS=osx
  conda_installer=$(find ${SCT_SOURCE}/external -type f -name "Miniconda*OSX*")
  dipy_whl=$(find ${SCT_SOURCE}/external -type f -name "dipy*osx*")
  ornlm_whl=$(find ${SCT_SOURCE}/external -type f -name "ornlm*osx*")
  echo OSX MACHINE
  #  Deals with the non X nature of OSX !
  force_bashrc_loading
elif uname -a | grep -i  linux > /dev/null 2>&1; then
  OS=linux
  conda_installer=$(find ${SCT_SOURCE}/external -type f -name "Miniconda*Linux*")
  dipy_whl=$(find ${SCT_SOURCE}/external -type f -name "dipy*linux*")
  ornlm_whl=$(find ${SCT_SOURCE}/external -type f -name "ornlm*linux*")
  echo LINUX MACHINE
else
  echo Sorry, the installer only supports Linux and OSX, quitting installer
  exit 1
fi

# Copy files to destination directory
if [ "${SCT_DIR}" != "${SCT_SOURCE}" ]; then
  echo copying source files to "${SCT_DIR}"
  mkdir -p ${SCT_DIR}/bin
  cd ${SCT_SOURCE}/bin
  find  . -type f -not -path '*/miniconda/*' -exec cp -v --parent {} ${SCT_DIR}/bin \;
  cd ${START_DIR}
  cp -r ${SCT_SOURCE}/scripts  ${SCT_DIR}/.
  cp ${SCT_SOURCE}/version.txt  ${SCT_DIR}/.
  mkdir -p ${SCT_DIR}/install
  cp -rp ${SCT_SOURCE}/install/requirements ${SCT_DIR}/install
  cp -rp ${SCT_SOURCE}/testing ${SCT_DIR}/.
  cp -rp ${SCT_SOURCE}/data ${SCT_DIR}/.
fi

echo installing conda ...

bash ${conda_installer} -p ${SCT_DIR}/bin/${OS}/miniconda -b -f

. ${SCT_DIR}/bin/${OS}/miniconda/bin/activate ${SCT_DIR}/bin/${OS}/miniconda
echo ${SCT_DIR}/bin/${OS}/miniconda/bin/activate

echo Installing dependencies
# N.B. the flag --ignore-installed is required because if user already
# has other dependencies, it will not install
conda install --yes --file ${SCT_SOURCE}/install/requirements/requirementsConda.txt
pip install --ignore-installed  -r ${SCT_SOURCE}/install/requirements/requirementsPip.txt
pip install --ignore-installed  ${dipy_whl}  ${ornlm_whl}

echo All requirement installed

# update PATH environment
if [[ $UID != 0 ]]; then
  while  [[ ! ${add_to_path} =~ ^([Yy](es)?|[Nn]o?)$ ]] ; do
    echo -n "Do you want to add the sct_* script to your PATH environment? Yes/No: "
    read add_to_path
  done
  echo ""
  if [[ ${add_to_path} =~ ^[Yy] ]]; then
    # assuming bash
    install_refresh
    # (t)csh for good measure
    if ! grep SPINALCORDTOOLBOX ${THE_CSHRC} > /dev/null; then
        echo "# SPINALCORDTOOLBOX" >> ${THE_CSHRC}
        echo "setenv PATH \"\$PATH:${SCT_DIR}/bin\"" >> ${THE_CSHRC}
    fi
  else
     echo Not adding ${INSTALL_DIR} to \$PATH
     echo You can always add it later or call SCT functions with full path ${SCT_DIR}/bin/sct_function
  fi
fi

#Make sure sct script are executable
find ${SCT_DIR}/bin/ -maxdepth 2 -type f -exec chmod 755 {} \;

# Run check dependencies
if ${SCT_DIR}/bin/sct_check_dependencies ; then
   echo INSTALLATION DONE
  if [[ $UID == 0 ]]; then
    echo You can add the $SCT_DIR to your $PATH to get acces to the sct tools
  fi
else
   echo INSTALLATION ERROR
fi
